// SPDX-FileCopyrightText: 2025 Karim "nogipx" Mamatkazin <nogipx@gmail.com>
//
// SPDX-License-Identifier: LGPL-3.0-or-later

/// üîß –†–∞—Å—à–∏—Ä–µ–Ω–∏—è –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ protobuf –∫–ª–∞—Å—Å–æ–≤ —Å RPC –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π
///
/// –≠—Ç–æ—Ç —Ñ–∞–π–ª –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –∏–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞—Ç—å
/// —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ protobuf –∫–ª–∞—Å—Å—ã —Å IRpcSerializableMessage
library;

import 'dart:typed_data';
import 'package:fixnum/fixnum.dart';
import 'package:protobuf/protobuf.dart';
import 'package:rpc_dart/contracts/base.dart';

import 'generated/user_service.pb.dart';

/// ============================================
/// –†–ê–°–®–ò–†–ï–ù–ò–Ø –î–õ–Ø –ü–†–û–¢–û–ë–£–§ –ö–õ–ê–°–°–û–í
/// ============================================

/// –ë–∞–∑–æ–≤–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö protobuf —Å–æ–æ–±—â–µ–Ω–∏–π
extension ProtobufRpcExtension<T extends GeneratedMessage> on T {
  /// –ü—Ä—è–º–∞—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å IRpcSerializableMessage —á–µ—Ä–µ–∑ protobuf –±–∏–Ω–∞—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
  Uint8List toBuffer() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –±–∏–Ω–∞—Ä–Ω—É—é —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—é protobuf
    return Uint8List.fromList(writeToBuffer());
  }
}

/// ============================================
/// –û–ë–ï–†–¢–ö–ò –î–õ–Ø –°–û–í–ú–ï–°–¢–ò–ú–û–°–¢–ò –° RPC
/// ============================================

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è GetUserRequest
class RpcGetUserRequest implements IRpcSerializableMessage {
  final GetUserRequest _proto;

  RpcGetUserRequest(this._proto);

  factory RpcGetUserRequest.create({
    required int userId,
    bool includeTags = false,
  }) {
    return RpcGetUserRequest(GetUserRequest()
      ..userId = userId
      ..includeTags = includeTags);
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcGetUserRequest fromBuffer(Uint8List bytes) {
    final proto = GetUserRequest.fromBuffer(bytes);
    return RpcGetUserRequest(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  int get userId => _proto.userId;
  bool get includeTags => _proto.includeTags;

  GetUserRequest get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è GetUserResponse
class RpcGetUserResponse implements IRpcSerializableMessage {
  final GetUserResponse _proto;

  RpcGetUserResponse(this._proto);

  factory RpcGetUserResponse.create({
    User? user,
    bool success = true,
    String errorMessage = '',
  }) {
    return RpcGetUserResponse(
      GetUserResponse()
        ..user = user ?? User()
        ..success = success
        ..errorMessage = errorMessage,
    );
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcGetUserResponse fromBuffer(Uint8List bytes) {
    final proto = GetUserResponse.fromBuffer(bytes);
    return RpcGetUserResponse(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  User? get user => _proto.hasUser() ? _proto.user : null;
  bool get success => _proto.success;
  String get errorMessage => _proto.errorMessage;

  GetUserResponse get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è CreateUserRequest
class RpcCreateUserRequest implements IRpcSerializableMessage {
  final CreateUserRequest _proto;

  RpcCreateUserRequest(this._proto);

  factory RpcCreateUserRequest.create({
    required String name,
    required String email,
    List<String> tags = const [],
  }) {
    return RpcCreateUserRequest(CreateUserRequest()
      ..name = name
      ..email = email
      ..tags.addAll(tags));
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcCreateUserRequest fromBuffer(Uint8List bytes) {
    final proto = CreateUserRequest.fromBuffer(bytes);
    return RpcCreateUserRequest(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  String get name => _proto.name;
  String get email => _proto.email;
  List<String> get tags => _proto.tags.toList();

  CreateUserRequest get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è CreateUserResponse
class RpcCreateUserResponse implements IRpcSerializableMessage {
  final CreateUserResponse _proto;

  RpcCreateUserResponse(this._proto);

  factory RpcCreateUserResponse.create({
    User? user,
    bool success = true,
    String errorMessage = '',
  }) {
    return RpcCreateUserResponse(
      CreateUserResponse()
        ..user = user ?? User()
        ..success = success
        ..errorMessage = errorMessage,
    );
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcCreateUserResponse fromBuffer(Uint8List bytes) {
    final proto = CreateUserResponse.fromBuffer(bytes);
    return RpcCreateUserResponse(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  User? get user => _proto.hasUser() ? _proto.user : null;
  bool get success => _proto.success;
  String get errorMessage => _proto.errorMessage;

  CreateUserResponse get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è ListUsersRequest
class RpcListUsersRequest implements IRpcSerializableMessage {
  final ListUsersRequest _proto;

  RpcListUsersRequest(this._proto);

  factory RpcListUsersRequest.create({
    int limit = 10,
    int offset = 0,
    UserStatus statusFilter = UserStatus.UNKNOWN,
  }) {
    return RpcListUsersRequest(ListUsersRequest()
      ..limit = limit
      ..offset = offset
      ..statusFilter = statusFilter);
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcListUsersRequest fromBuffer(Uint8List bytes) {
    final proto = ListUsersRequest.fromBuffer(bytes);
    return RpcListUsersRequest(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  int get limit => _proto.limit;
  int get offset => _proto.offset;
  UserStatus get statusFilter => _proto.statusFilter;

  ListUsersRequest get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è ListUsersResponse
class RpcListUsersResponse implements IRpcSerializableMessage {
  final ListUsersResponse _proto;

  RpcListUsersResponse(this._proto);

  factory RpcListUsersResponse.create({
    List<User> users = const [],
    bool hasMore = false,
    bool success = true,
  }) {
    return RpcListUsersResponse(
      ListUsersResponse()
        ..users.addAll(users)
        ..hasMore = hasMore,
    );
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcListUsersResponse fromBuffer(Uint8List bytes) {
    final proto = ListUsersResponse.fromBuffer(bytes);
    return RpcListUsersResponse(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  List<User> get users => _proto.users.toList();
  bool get hasMore => _proto.hasMore;
  bool get success => true; // –í—Å–µ–≥–¥–∞ true –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è

  ListUsersResponse get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è WatchUsersRequest
class RpcWatchUsersRequest implements IRpcSerializableMessage {
  final WatchUsersRequest _proto;

  RpcWatchUsersRequest(this._proto);

  factory RpcWatchUsersRequest.create({
    required List<int> userIds,
    List<String> eventTypes = const [],
  }) {
    return RpcWatchUsersRequest(WatchUsersRequest()
      ..userIds.addAll(userIds)
      ..eventTypes.addAll(eventTypes));
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcWatchUsersRequest fromBuffer(Uint8List bytes) {
    final proto = WatchUsersRequest.fromBuffer(bytes);
    return RpcWatchUsersRequest(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  List<int> get userIds => _proto.userIds.toList();
  List<String> get eventTypes => _proto.eventTypes.toList();

  WatchUsersRequest get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è UserEventResponse
class RpcUserEventResponse implements IRpcSerializableMessage {
  final UserEventResponse _proto;

  RpcUserEventResponse(this._proto);

  factory RpcUserEventResponse.create({
    UserEvent? event,
    bool success = true,
  }) {
    return RpcUserEventResponse(
      UserEventResponse()..event = event ?? UserEvent(),
    );
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcUserEventResponse fromBuffer(Uint8List bytes) {
    final proto = UserEventResponse.fromBuffer(bytes);
    return RpcUserEventResponse(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  UserEvent get event => _proto.event;
  bool get success => true; // –í—Å–µ–≥–¥–∞ true –¥–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è

  UserEventResponse get proto => _proto;
}

/// –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è BatchCreateUsersResponse
class RpcBatchCreateUsersResponse implements IRpcSerializableMessage {
  final BatchCreateUsersResponse _proto;

  RpcBatchCreateUsersResponse(this._proto);

  factory RpcBatchCreateUsersResponse.create({
    List<User> users = const [],
    int totalCreated = 0,
    int totalErrors = 0,
    List<String> errorMessages = const [],
    bool success = true,
  }) {
    return RpcBatchCreateUsersResponse(
      BatchCreateUsersResponse()
        ..users.addAll(users)
        ..totalCreated = totalCreated
        ..totalErrors = totalErrors
        ..errorMessages.addAll(errorMessages)
        ..success = success,
    );
  }

  @override
  Uint8List toBuffer() => _proto.toBuffer();

  static RpcBatchCreateUsersResponse fromBuffer(Uint8List bytes) {
    final proto = BatchCreateUsersResponse.fromBuffer(bytes);
    return RpcBatchCreateUsersResponse(proto);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
  List<User> get users => _proto.users.toList();
  int get totalCreated => _proto.totalCreated;
  int get totalErrors => _proto.totalErrors;
  List<String> get errorMessages => _proto.errorMessages.toList();
  bool get success => _proto.success;

  BatchCreateUsersResponse get proto => _proto;
}

/// ============================================
/// –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –°–û–ó–î–ê–ù–ò–Ø –ü–†–û–¢–û–ë–£–§ –û–ë–™–ï–ö–¢–û–í
/// ============================================

/// –£—Ç–∏–ª–∏—Ç—ã –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è protobuf –æ–±—ä–µ–∫—Ç–æ–≤
class ProtoUtils {
  /// –°–æ–∑–¥–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static User createUser({
    required int id,
    required String name,
    required String email,
    List<String> tags = const [],
    UserStatus status = UserStatus.ACTIVE,
    DateTime? createdAt,
  }) {
    final timestamp = createdAt?.millisecondsSinceEpoch ?? DateTime.now().millisecondsSinceEpoch;

    return User()
      ..id = id
      ..name = name
      ..email = email
      ..tags.addAll(tags)
      ..status = status
      ..createdAt = Int64(timestamp);
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  static UserEvent createUserEvent({
    required int userId,
    required String eventType,
    Map<String, String> data = const {},
    DateTime? timestamp,
  }) {
    final eventTimestamp =
        timestamp?.millisecondsSinceEpoch ?? DateTime.now().millisecondsSinceEpoch;

    return UserEvent()
      ..userId = userId
      ..eventType = eventType
      ..data.addAll(data)
      ..timestamp = Int64(eventTimestamp);
  }
}

/// ============================================
/// –£–¢–ò–õ–ò–¢–´ –î–õ–Ø –ü–†–û–¢–û–ë–£–§
/// ============================================

/// –£—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã–π –∫–ª–∞—Å—Å –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è protobuf —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤
class ProtobufSerializers {
  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcGetUserRequest
  static RpcGetUserRequest Function(Uint8List) getUserRequestParser() {
    return RpcGetUserRequest.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcGetUserResponse
  static RpcGetUserResponse Function(Uint8List) getUserResponseParser() {
    return RpcGetUserResponse.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcCreateUserRequest
  static RpcCreateUserRequest Function(Uint8List) createUserRequestParser() {
    return RpcCreateUserRequest.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcCreateUserResponse
  static RpcCreateUserResponse Function(Uint8List) createUserResponseParser() {
    return RpcCreateUserResponse.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcListUsersRequest
  static RpcListUsersRequest Function(Uint8List) listUsersRequestParser() {
    return RpcListUsersRequest.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcListUsersResponse
  static RpcListUsersResponse Function(Uint8List) listUsersResponseParser() {
    return RpcListUsersResponse.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcWatchUsersRequest
  static RpcWatchUsersRequest Function(Uint8List) watchUsersRequestParser() {
    return RpcWatchUsersRequest.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcUserEventResponse
  static RpcUserEventResponse Function(Uint8List) userEventResponseParser() {
    return RpcUserEventResponse.fromBuffer;
  }

  /// –°–æ–∑–¥–∞–µ—Ç —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä –¥–ª—è RpcBatchCreateUsersResponse
  static RpcBatchCreateUsersResponse Function(Uint8List) batchCreateUsersResponseParser() {
    return RpcBatchCreateUsersResponse.fromBuffer;
  }
}
