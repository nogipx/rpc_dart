import 'dart:typed_data';

/// Абстракция транспортного уровня для передачи данных
abstract interface class RpcTransport {
  /// Уникальный идентификатор транспорта
  String get id;

  /// Отправляет сообщение через транспорт
  ///
  /// [data] - данные для отправки
  /// Возвращает Future, который завершается после отправки данных
  Future<void> send(Uint8List data);

  /// Получает поток сообщений из транспорта
  ///
  /// Возвращает Stream, в котором будут появляться входящие сообщения
  Stream<Uint8List> receive();

  /// Закрывает транспорт и освобождает ресурсы
  ///
  /// Возвращает Future, который завершается после закрытия транспорта
  Future<void> close();

  /// Возвращает true, если транспорт доступен для отправки и получения сообщений
  bool get isAvailable;
}
